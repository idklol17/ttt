body {
    font-family: 'Press Start 2P', cursive; /* A pixelated font often used for retro games */
    background-color: #000; /* Dark background */
    color: #0F0; /* Default green text */
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    overflow: hidden; /* Hide potential overflow from glitches */
    cursor: url('data:image/x-icon;base64,...'), auto; /* Custom glitchy cursor */
}

#game-container {
    text-align: center;
    border: 2px solid #0F0;
    padding: 20px;
    box-shadow: 0 0 10px #0F0;
    position: relative;
    overflow: hidden; /* For board shake */
}

#board {
    display: grid;
    grid-template-columns: repeat(3, 100px);
    grid-template-rows: repeat(3, 100px);
    gap: 5px;
    margin: 20px auto;
    width: 315px; /* 3*100 + 2*5 */
    height: 315px;
    position: relative;
}

.cell {
    width: 100px;
    height: 100px;
    background-color: rgba(0, 255, 0, 0.1);
    border: 1px solid #0F0;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 3em;
    cursor: pointer;
    transition: background-color 0.1s ease-in-out, transform 0.1s ease-in-out;
    position: relative;
    overflow: hidden; /* For piece corruption */
}

.cell:hover {
    background-color: rgba(0, 255, 0, 0.3);
}

/* Player 'X' and 'O' styling */
.cell.x::before {
    content: 'X';
    color: #F00;
}
.cell.o::before {
    content: 'O';
    color: #00F;
}

#status-message {
    margin-top: 15px;
    font-size: 1.2em;
    color: #FFF;
}

#reset-button {
    background-color: #333;
    color: #0F0;
    border: 1px solid #0F0;
    padding: 10px 20px;
    margin-top: 20px;
    cursor: pointer;
    font-size: 1em;
    transition: background-color 0.2s, color 0.2s;
}

#reset-button:hover {
    background-color: #0F0;
    color: #000;
}

/* --- Glitch Effects (Progressive) --- */

/* Basic Flickering */
.glitch-flicker {
    animation: flicker 0.1s infinite alternate;
}

@keyframes flicker {
    0% { opacity: 1; }
    50% { opacity: 0.8; }
    100% { opacity: 1; }
}

/* RGB Split (on board/pieces) */
.glitch-rgb {
    position: relative;
}
.glitch-rgb::before, .glitch-rgb::after {
    content: attr(data-text); /* Use data-text for content if specific to X/O */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
.glitch-rgb::before {
    left: -2px;
    text-shadow: 1px 0 0 red;
    animation: glitch-split-red 0.7s infinite alternate;
}
.glitch-rgb::after {
    left: 2px;
    text-shadow: -1px 0 0 blue;
    animation: glitch-split-blue 0.7s infinite alternate;
}
.glitch-rgb.x::before, .glitch-rgb.x::after { content: 'X'; }
.glitch-rgb.o::before, .glitch-rgb.o::after { content: 'O'; }

@keyframes glitch-split-red {
    0% { transform: translate(0); }
    20% { transform: translate(-2px, 2px); }
    40% { transform: translate(-1px, -1px); }
    60% { transform: translate(2px, 1px); }
    80% { transform: translate(1px, -2px); }
    100% { transform: translate(0); }
}
@keyframes glitch-split-blue {
    0% { transform: translate(0); }
    20% { transform: translate(2px, -2px); }
    40% { transform: translate(1px, 1px); }
    60% { transform: translate(-2px, -1px); }
    80% { transform: translate(-1px, 2px); }
    100% { transform: translate(0); }
}

/* Board Shake */
.shake-board {
    animation: shake 0.2s infinite alternate;
}

@keyframes shake {
    0% { transform: translate(0, 0); }
    25% { transform: translate(2px, -2px); }
    50% { transform: translate(-2px, 2px); }
    75% { transform: translate(1px, 1px); }
    100% { transform: translate(-1px, -1px); }
}

/* Color Shift (example for reds) */
body.disturbed-1 { background-color: #100; color: #F00; }
body.disturbed-2 { background-color: #200; color: #F50; }
body.disturbed-3 { background-color: #300; color: #FA0; }
/* Add more classes for deeper color shifts (e.g., to greens, grays) */

/* Cryptic Messages */
#cryptic-messages-container {
    position: fixed;
    top: 10%;
    left: 50%;
    transform: translateX(-50%);
    width: 80%;
    pointer-events: none; /* Allows clicks to pass through */
    z-index: 1000;
}

.cryptic-message {
    position: absolute;
    font-size: 1.5em;
    color: rgba(255, 0, 0, 0.7);
    white-space: nowrap;
    animation: fade-in-out 5s forwards,
               glitch-text 0.5s infinite alternate;
    opacity: 0;
    text-shadow: 0 0 5px rgba(255, 0, 0, 0.5);
}

@keyframes fade-in-out {
    0% { opacity: 0; transform: translateY(0) scale(1); }
    10% { opacity: 1; }
    90% { opacity: 1; }
    100% { opacity: 0; transform: translateY(-20px) scale(0.9); }
}

@keyframes glitch-text {
    0% { text-shadow: 1px 0 0 red, -1px 0 0 blue; }
    25% { text-shadow: -1px 1px 0 green, 1px -1px 0 yellow; }
    50% { text-shadow: 0 1px 0 purple, 0 -1px 0 orange; }
    75% { text-shadow: 1px -1px 0 cyan, -1px 1px 0 magenta; }
    100% { text-shadow: 0 0 0; }
}

/* Corrupted Pieces */
.cell.corrupted::before {
    filter: blur(2px) hue-rotate(90deg) saturate(200%);
    transform: scale(1.1) rotate(5deg);
    animation: piece-glitch 0.3s infinite alternate;
}

@keyframes piece-glitch {
    0% { transform: scale(1) rotate(0deg); filter: blur(0); }
    50% { transform: scale(1.05) rotate(2deg); filter: blur(1px); }
    100% { transform: scale(1) rotate(-1deg); filter: blur(0.5px); }
}
